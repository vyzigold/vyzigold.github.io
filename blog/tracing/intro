A really interesting telemetry signals are traces https://opentelemetry.io/docs/concepts/signals/traces/. Traces can show us what happens in the application, where exactly it happens, how long it takes, what are the arguments and so on. Imagine for example creating a server in openstack. You use the `openstack image create` command. This creates a HTTP request to Nova, which then communicates with other components, like Glance, Neutron, Libvirt, the database, ... Ideally traces should enable us to see each of the HTTP requests between the components including which arguments were used and how long it took, we can also see the exact database SQL queries and so on.

Unfortunatelly Red Hat openstack doesn't include a way to collect traces out of the box (as of today), but there are 2 ways which I investigated and could be used to add this functionality to RHOSO or to any other flavor of openstack. You can either use the OTEL autoinstrumentation to instrument the components code https://opentelemetry.io/docs/zero-code/python/ or you can use an openstack project called OSProfiler https://github.com/openstack/osprofiler which allows to do some of the OTEL autoinstrumentation too and it includes some additional manual instrumentation throughout a lot of the openstack services.

During my time looking into these I read a lot of opinions about which one is the better option, how many traces should be collected, which one is awfuly slow and so on. In this blog I can tell you how to start using each of them and I have a small comparison at the end as well, but I don't know for sure which option is better or what exact settings to use. That will require a lot more experimentation.

